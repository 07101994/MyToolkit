<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SampleUwpApp">

    <SolidColorBrush x:Key="NavButtonPressedBackgroundBrush" Color="{ThemeResource SystemListMediumColor}" />
    <SolidColorBrush x:Key="NavButtonHoverBackgroundBrush" Color="{ThemeResource SystemListLowColor}" />
    <SolidColorBrush x:Key="NavButtonCheckedBackgroundBrush" Color="{ThemeResource SystemListAccentLowColor}" />

    <SolidColorBrush x:Key="NavButtonCheckedPressedBackgroundBrush" Color="{ThemeResource SystemListAccentMediumColor}" />
    <SolidColorBrush x:Key="NavButtonCheckedHoverBackgroundBrush" Color="{ThemeResource SystemListAccentHighColor}" />

    <Style x:Key="HamburgerItemButtonStyle" TargetType="RadioButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{ThemeResource SystemBaseHighColor}" />
        <Setter Property="Padding" Value="1,4,0,0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
                                                                       Storyboard.TargetName="HoverBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
                                                                       Storyboard.TargetName="CheckedHoverBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
                                                                       Storyboard.TargetName="PressedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
                                                                       Storyboard.TargetName="CheckedPressedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NixonGlyph" 
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" 
                                                                    Value="{ThemeResource RadioButtonContentDisabledForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" 
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" 
                                                                    Value="{ThemeResource RadioButtonContentDisabledForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
                                                                       Storyboard.TargetName="CheckedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" 
                                                         Storyboard.TargetName="FocusVisualWhite" 
                                                         Storyboard.TargetProperty="Opacity" To="1" />
                                        <DoubleAnimation Duration="0" 
                                                         Storyboard.TargetName="FocusVisualBlack" 
                                                         Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="PointerFocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="48" />
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="48" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="24" />
                            </Grid.ColumnDefinitions>

                            <Grid.Resources>
                                <Style TargetType="Rectangle" x:Key="FocusVisual">
                                    <Setter Property="Opacity" Value="0" />
                                    <Setter Property="StrokeDashArray" Value="1,1" />
                                    <Setter Property="StrokeEndLineCap" Value="Square" />
                                </Style>
                            </Grid.Resources>

                            <!-- background -->
                            <Grid x:Name="NotCheckedBackground" Grid.ColumnSpan="4">
                                <Rectangle x:Name="PressedBackground" Visibility="Collapsed" 
                                           Fill="{StaticResource NavButtonPressedBackgroundBrush}"/>
                                <Rectangle x:Name="HoverBackground" Visibility="Collapsed" 
                                           Fill="{StaticResource NavButtonHoverBackgroundBrush}"/>
                            </Grid>
                            <Grid x:Name="CheckedBackground" 
                                  Grid.ColumnSpan="4" 
                                  Visibility="Collapsed" 
                                  Background="{StaticResource NavButtonCheckedBackgroundBrush}">
                                <Rectangle x:Name="CheckedPressedBackground" Visibility="Collapsed" 
                                           Fill="{StaticResource NavButtonCheckedPressedBackgroundBrush}"/>
                                <Rectangle x:Name="CheckedHoverBackground" Visibility="Collapsed" 
                                           Fill="{StaticResource NavButtonCheckedHoverBackgroundBrush}"/>
                            </Grid>

                            <!-- focus -->
                            <Rectangle x:Name="FocusVisualWhite" Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}"
                                       StrokeDashOffset="1.5" Style="{StaticResource FocusVisual}" />
                            <Rectangle x:Name="FocusVisualBlack" Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}" 
                                       StrokeDashOffset="0.5" Style="{StaticResource FocusVisual}" />

                            <!-- glyph -->
                            <ContentPresenter x:Name="NixonGlyph" Content="{TemplateBinding Tag}" />

                            <!-- text -->
                            <ContentPresenter x:Name="ContentPresenter"
                                              Grid.Column="1"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        			          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        			          AutomationProperties.AccessibilityView="Raw"
                        			          Content="{TemplateBinding Content}"
                        			          ContentTemplate="{TemplateBinding ContentTemplate}"
                        			          ContentTransitions="{TemplateBinding ContentTransitions}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:Hamburger" >
        <Setter Property="HamburgerBackgroundBrush" Value="{ThemeResource SystemControlBackgroundAccentBrush}" />
        <Setter Property="HamburgerForegroundBrush" Value="{ThemeResource SystemChromeWhiteColor}" />
        <Setter Property="DisplayMode" Value="CompactOverlay" />
        <Setter Property="PaneWidth" Value="160" />
        <Setter Property="IsPaneOpen" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:Hamburger">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState x:Name="Normal">
                                    <VisualState.Setters>
                                        <Setter Target="SplitView.CompactPaneLength" Value="48"></Setter>
                                    </VisualState.Setters>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="400"></AdaptiveTrigger>
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState x:Name="Mobile">
                                    <VisualState.Setters>
                                        <Setter Target="SplitView.CompactPaneLength" Value="0"></Setter>
                                    </VisualState.Setters>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="0"></AdaptiveTrigger>
                                    </VisualState.StateTriggers>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="48" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="48" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <!-- Hamburger button -->
                            <RadioButton x:Name="HamburgerButton"
                                         VerticalAlignment="Top" HorizontalAlignment="Left"
                                         Foreground="{TemplateBinding HamburgerForegroundBrush}"
                                         Background="{TemplateBinding HamburgerBackgroundBrush}" 
                                         Style="{StaticResource HamburgerItemButtonStyle}">
                                <RadioButton.Tag>
                                    <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE700;" 
                                               VerticalAlignment="Center" HorizontalAlignment="Center" />
                                </RadioButton.Tag>
                            </RadioButton>
                            
                            <!-- Header -->
                            <Border Grid.Column="1" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
                                <ContentPresenter Content="{TemplateBinding Header}" 
                                                  ContentTemplate="{TemplateBinding HeaderTemplate}" />
                            </Border>
                        </Grid>

                        <SplitView x:Name="SplitView" DisplayMode="{TemplateBinding DisplayMode}" 
                                   IsPaneOpen="{TemplateBinding IsPaneOpen}" 
                                   OpenPaneLength="{TemplateBinding PaneWidth}" Grid.Row="1">
                            <SplitView.Pane>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <ItemsControl ItemsSource="{TemplateBinding TopItems}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <RadioButton GroupName="Nav" 
                                                             Command="{Binding ElementName=SplitView, Path=Tag}"
                                                             CommandParameter="{Binding}"
                                                             IsChecked="{Binding IsChecked, Mode=TwoWay}"
                                                             Content="{Binding Label}"
                                                             Style="{StaticResource HamburgerItemButtonStyle}">
                                                    <RadioButton.Tag>
                                                        <TextBlock FontFamily="Segoe MDL2 Assets"
                                                                   Text="{Binding Icon}" 
                                                                   VerticalAlignment="Center" 
                                                                   HorizontalAlignment="Center" />
                                                    </RadioButton.Tag>
                                                </RadioButton>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                    <ItemsControl Grid.Row="1" ItemsSource="{TemplateBinding BottomItems}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <RadioButton GroupName="Nav" 
                                                             Command="{Binding ElementName=SplitView, Path=Tag}"
                                                             CommandParameter="{Binding}"
                                                             IsChecked="{Binding IsChecked, Mode=TwoWay}"
                                                             Content="{Binding Label}"
                                                             Style="{StaticResource HamburgerItemButtonStyle}">
                                                    <RadioButton.Tag>
                                                        <TextBlock FontFamily="Segoe MDL2 Assets"
                                                                   Text="{Binding Icon}" 
                                                                   VerticalAlignment="Center" 
                                                                   HorizontalAlignment="Center" />
                                                    </RadioButton.Tag>
                                                </RadioButton>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </Grid>
                            </SplitView.Pane>
                            <SplitView.Content>
                                <ContentPresenter Content="{TemplateBinding Content}" Grid.Row="1" />
                            </SplitView.Content>
                        </SplitView>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
